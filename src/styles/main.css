/* 
==========================================================================
   PLUGIN IMPORTS
==========================================================================
*/

@import "primeicons/primeicons.css";
@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* 
==========================================================================
   FONT IMPORT
==========================================================================
*/

@font-face {
  font-family: 'Inter Var';
  src: url('../fonts/InterVar.ttf');
}

/* 
==========================================================================
   MODERN CSS RESET BY JOSH COMEAU
==========================================================================
*/

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
  font-weight: normal;
}

/*
  2. Remove default margin
*/
* {
  margin: 0;
}

/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
  min-height: 100vh;
  font-family:
    'Inter Var',
    sans-serif;
  line-height: 1.5;
  font-size: 1rem;
  color: var(--main-color);
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg,
button,
input {
  display: block;
  max-width: 100%;
}

/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  7. Avoid text overflows
*/
h1,
h2,
h3,
h4,
h5,
h6,
p {
  overflow-wrap: break-word;
  margin-bottom: .875rem;
  text-align: center;
}


/*
  8. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* 
==========================================================================
   CUSTOM VARIABLES
==========================================================================
*/

:root {
  --main-color: #f4f4f4;
  --secondary-color: #1d1e27;
  --main-border: .0625rem solid #616268;
  --main-border-radius: .375rem;
  --page-padding: 2rem;
  --mobile-padding: 1rem;
  --card-padding: 1.3125rem;
  --card-background: #34343d;
  --input-padding: .4375rem .6563rem;
  --emerald: #34d399;
  --button-border: .0625rem solid var(--main-color);
  --button-hover-color: #bbbcbe;
  --box-shadow: 0 0 #0000, 0 0 #0000, 0 .0625rem .125rem 0 rgba(18, 18, 23, 0.05);
}

/* 
==========================================================================
   CLASSES AND ELEMENTS
==========================================================================
*/

/* LAYOUT */

.wrapper {
  height: 100vh;
}

.wrapper,
.interactions,
.button {
  display: flex;
  align-items: center;
}

.wrapper,
.button {
  justify-content: center;
}

.interactions {
  justify-content: space-between;
  margin-bottom: 2.625rem;
}

.remember,
.button {
  position: relative;
  display: inline-flex;
  user-select: none;
}

.input-label {
  margin-bottom: .5rem;
}

/* MODULES */

.card {
  width: 31.25rem;
  background-color: var(--card-background);
  padding: var(--card-padding);
  box-shadow: var(--box-shadow);
}

.card,
.button,
input {
  border-radius: var(--main-border-radius);
}

.button {
  border: var(--button-border);
  background-color: var(--main-color);
  color: var(--secondary-color);
  overflow: hidden;
  gap: .5rem;

  &:hover {
    background-color: var(--button-hover-color);
    border-color: var(--button-hover-color);
  }
}

.button,
input {
  width: 100%;
  padding: var(--input-padding);
  transition: background-color .2s, color .2s, border-color .2s, outline-color .2s, box-shadow .2s;
}

.button,
label,
h2,
a {
  font-weight: 600;
}

a:hover,
a:focus,
a:active {
  outline: none;
  color: #34d399;
}

body,
input {
  background-color: var(--secondary-color);
}

input {
  margin-bottom: 1rem;
  border: var(--main-border);

  &:hover,
  &:active,
  &:focus {
    outline: none;
    border: .0625rem solid var(--main-color);
  }
}

::placeholder,
label,
a,
button {
  font-size: .875rem;
  display: block;
}

::placeholder {
  font-weight: 500;
}

/* these rules are necessary to style the checkbox the way I wished */
.p-checkbox {
  margin-right: .375rem;
}

.p-checkbox-box {
  border: .0625rem solid var(--main-color) !important;
}

.p-checkbox-checked .p-checkbox-box {
  border-color: var(--main-color) !important;
  background: var(--main-color) !important;
}

.p-checkbox-checked .p-checkbox-icon {
  color: var(--secondary-color) !important;
}

.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-icon {
  color: var(--secondary-color) !important;
}

.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
  background: var(--main-color) !important;
  border-color: var(--main-color) !important;
}

.p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {
  outline: .0625rem solid var(--main-color) !important;
  outline-offset: .125rem !important;
}

/* 
==========================================================================
   MEDIA QUERIES
==========================================================================
*/

/*  320px ---> 767px */
@media only screen and (min-width: 20rem) and (max-width: 47.9375rem) {}

/*  768px ---> 1023px */
@media only screen and (min-width: 48rem) and (max-width: 63.9375rem) {}

/*  1024px ---> 1439px */
@media only screen and (min-width: 64rem) and (max-width: 89.9375rem) {}

/*  1440px ---> 2560px */
@media only screen and (min-width: 90rem) and (max-width: 160rem) {}